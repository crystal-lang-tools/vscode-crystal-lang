{
	"name": "crystal-lang",
	"displayName": "Crystal Language",
	"description": "The Crystal Programming Language",
	"version": "0.10.0-alpha4",
	"publisher": "crystal-lang-tools",
	"icon": "images/icon.gif",
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/crystal-lang-tools/vscode-crystal-lang"
	},
	"bugs": "https://github.com/crystal-lang-tools/vscode-crystal-lang/issues",
	"engines": {
		"vscode": "^1.70.0"
	},
	"keywords": [
		"crystal",
		"syntax",
		"languages"
	],
	"categories": [
		"Programming Languages",
		"Snippets",
		"Themes",
		"Formatters",
		"Keymaps"
	],
	"galleryBanner": {
		"color": "#000000",
		"theme": "dark"
	},
	"main": "./out/main.js",
	"activationEvents": [
		"workspaceContains:*/shard.yml",
		"workspaceContains:*/shard.override.yml"
	],
	"contributes": {
		"languages": [
			{
				"id": "crystal",
				"aliases": [
					"Crystal",
					"crystal"
				],
				"extensions": [
					".cr"
				],
				"configuration": "./config/crystal-language-configuration.json"
			},
			{
				"id": "html.ecr",
				"aliases": [
					"HTML (Crystal - ECR)"
				],
				"extensions": [
					".ecr"
				],
				"configuration": "./config/ecr-language-configuration.json"
			},
			{
				"id": "slang",
				"aliases": [
					"Crystal Slang"
				],
				"extensions": [
					".slang"
				],
				"configuration": "./config/slang-language-configuration.json"
			},
			{
				"id": "crystal-markdown-injection"
			}
		],
		"grammars": [
			{
				"language": "crystal",
				"scopeName": "source.crystal",
				"path": "./syntaxes/crystal.json"
			},
			{
				"language": "html.ecr",
				"scopeName": "text.html.ecr",
				"path": "./syntaxes/ecr.json",
				"embeddedLanguages": {
					"source.css": "css",
					"source.html": "html",
					"source.js": "javascript",
					"source.crystal": "crystal"
				}
			},
			{
				"language": "slang",
				"scopeName": "text.slang",
				"path": "./syntaxes/slang.json"
			},
			{
				"language": "crystal-markdown-injection",
				"scopeName": "source.markdown.crystal.codeblock",
				"path": "./syntaxes/codeblock.json",
				"injectTo": [
					"text.html.markdown"
				],
				"embeddedLanguages": {
					"meta.embedded.block.crystal": "crystal"
				}
			}
		],
		"snippets": [
			{
				"language": "crystal",
				"path": "./snippets/crystal.json"
			},
			{
				"language": "html.ecr",
				"path": "./snippets/ecr.json"
			},
			{
				"language": "slang",
				"path": "./snippets/slang.json"
			}
		],
		"taskDefinitions": [
			{
				"type": "crystal",
				"required": [
					"command"
				],
				"properties": {
					"command": {
						"type": "string"
					},
					"args": {
						"type": "array"
					},
					"file": {
						"type": "string"
					}
				}
			},
			{
				"type": "shards",
				"required": [
					"command"
				],
				"properties": {
					"command": {
						"type": "string"
					},
					"args": {
						"type": "array"
					}
				}
			}
		],
		"configuration": {
			"type": "object",
			"title": "Crystal Lang configuration",
			"properties": {
				"crystal-lang.compiler": {
					"title": "Compiler",
					"type": "string",
					"default": "crystal",
					"description": "The path to the Crystal compiler."
				},
				"crystal-lang.shards": {
					"title": "Shards",
					"type": "string",
					"default": "shards",
					"description": "The path to the Shards executable."
				},
				"crystal-lang.server": {
					"type": "string",
					"default": "",
					"description": "Absolute path for Scry/Crystalline LSP server binary\n(Language Server Protocol for Crystal)."
				},
				"crystal-lang.server-env": {
					"type": "object",
					"default": {},
					"description": "[Experimental][Reload required]\nEnvironment object to pass to the LSP"
				},
				"crystal-lang.main": {
					"type": "string",
					"default": null,
					"description": "Specify the main file for the tools.\nDoes not work with multi-root workspaces."
				},
				"crystal-lang.spec-explorer": {
					"type": "boolean",
					"default": false,
					"description": "Show specs in the Test Explorer."
				},
				"crystal-lang.spec-tags": {
					"type": "string",
					"default": "",
					"description": "Tags to pass to the spec runner, i.e. '--tag hello --tag ~world'"
				},
				"crystal-lang.hover": {
					"type": "boolean",
					"default": true,
					"description": "Show type information on hover."
				},
				"crystal-lang.definitions": {
					"type": "boolean",
					"default": true,
					"description": "Enables jump to definition."
				},
				"crystal-lang.problems": {
					"type": "boolean",
					"default": true,
					"description": "Enable problems finder. Runs the Crystal compiler on save and reports any problems found."
				},
				"crystal-lang.dependencies": {
					"type": "boolean",
					"default": true,
					"description": "Use the dependencies tool to determine main for each file. Can be slow."
				},
				"crystal-lang.flags": {
					"type": "string",
					"default": "",
					"description": "Compile-time flags to pass to the compiler, i.e. '-Dflag1 -Dflag2'.\nFlags are shared across multi-root workspaces."
				},
				"crystal-lang.disable-gc": {
					"type": "boolean",
					"default": false,
					"description": "Disable garbage collection for running the compiler tools. Can improve performance at the expense of memory."
				},
				"crystal-lang.unreachable": {
					"type": "boolean",
					"default": false,
					"description": "Marks unreachable methods and the number of times methods are used"
				},
				"crystal-lang.hierarchy-complete": {
					"type": "boolean",
					"default": true,
					"description": "Autocompletes type hierarchy when modifying classes/modules/structs"
				}
			}
		},
		"commands": [
			{
				"command": "crystal-lang.showMacroExpansion",
				"title": "Show macro expansion"
			}
		],
		"menus": {
			"editor/context": [
				{
					"command": "crystal-lang.showMacroExpansion",
					"group": "z_commands"
				}
			]
		}
	},
	"scripts": {
		"format": "prettier --write ./src2/**/*.ts",
		"package": "vsce package",
		"vscode:prepublish": "npm run esbuild-base -- --minify",
		"esbuild-base": "esbuild ./src2/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
		"esbuild": "npm run esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
		"test-compile": "tsc -p ./"
	},
	"dependencies": {
		"@types/glob": "^8.1.0",
		"async-mutex": "^0.4.0",
		"glob": "^10.3.15",
		"junit2json": "~3.1.4",
		"temp": "~0.9.4",
		"terminate": "^2.6.1",
		"vscode-languageclient": "^8.1.0",
		"yaml": "^2.1.1"
	},
	"devDependencies": {
		"@types/express-serve-static-core": "^4.17.30",
		"@types/node": "^14.11.1",
		"@types/temp": "^0.9.4",
		"@types/vscode": "^1.70.0",
		"@vscode/vsce": "^2.22.0",
		"esbuild": "^0.19.8",
		"minimist": ">=1.2.2",
		"prettier": "^2.8.4",
		"typescript": "^4.0.3"
	},
	"prettier": {
		"arrowParens": "avoid",
		"singleQuote": true
	}
}
